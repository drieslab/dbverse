{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#dbverse","title":"dbverse","text":"<p>The <code>dbverse</code> is a set of open-source and composable packages for larger-than-memory data analysis. The <code>dbverse</code> provides object relational mappings for common data objects, including sparse and dense matrices, spatial geometries, and others, and is powered by DuckDB.</p> <p>The goal of <code>dbverse</code> is to enable users to analyze larger-than-memory data objects using familiar coding syntax and methods provided by existing in-memory packages. Please visit the packages page for details about each <code>dbverse</code> package.</p> <p>Note: the <code>dbverse</code> is currently under active development.</p>"},{"location":"#installation","title":"Installation","text":"<p>You can install the development version of <code>dbverse</code> like so:</p> <pre><code># install.packages(\"pak\", repos = sprintf(\"https://r-lib.github.io/p/pak/stable/%s/%s/%s\", .Platform$pkgType, R.Version()$os, R.Version()$arch))\npak::pak(\"drieslab/dbverse\")\n</code></pre>"},{"location":"about/","title":"About","text":""},{"location":"about/#sponsors","title":"Sponsors","text":"<p>TODO</p>"},{"location":"about/#core-contributors","title":"Core Contributors","text":"Edward C. Ruiz auth, cre github Jiaji George Chen auth github Ruben Dries auth, rev github"},{"location":"about/#recurrent-contributors","title":"Recurrent Contributors","text":"<p>TODO</p>"},{"location":"conduct/","title":"Code of Conduct","text":"<p>TODO</p>"},{"location":"contribute/","title":"Contribute","text":"<p>TODO</p>"},{"location":"guides/","title":"Guides","text":""},{"location":"guides/#add-vignettes","title":"Add vignettes","text":""},{"location":"overview/","title":"dbverse","text":"<p>Note: dbverse is still in early development. changes to the below are likely to occur.</p>"},{"location":"overview/#class-diagram","title":"Class Diagram","text":"<pre><code>classDiagram\ndirection LR\n\nnamespace Input_Data {\n\n    class numerical{\n        .mtx\n        .csv\n        .parquet\n        Matrix:: (R)\n        matrix:: (R)\n        data.frame (R)\n    }\n\n    class geometries{\n        50+ spatial file formats\n        sf::sf (R)\n        terra::spatVector (R)\n    }\n\n    class sequences{\n        10+ genomic file formats\n    }\n\n}\n\nnamespace computer {\n\n    class database{\n\n    }\n\n}\n\nnamespace dbverse {\n\n    class dbMatrix_lib{\n\n    }\n\n    class dbSpatial_lib{\n\n    }\n\n    class dbSequence_lib{\n\n    }\n\n    class dbData_lib{\n\n    }\n\n}\n\nnamespace dbSpatial_lib {\n\n    class dbSpatial{\n    + dbData: dbData\n    + geometry: varchar\n    - ST_*(geom) [DuckDB Spatial Extension]\n    }\n\n    %% class dbSpatialPoints{\n    %% - ST_*(geom_point) \n    %% }\n\n    %% class dbSpatialPolygons{\n    %% - ST_*(geom_polygon)\n    %% }\n}\n\nnamespace dbMatrix_lib {\n    class dbMatrix {\n        + dbData: dbData\n        + dim_names: [enum,enum]\n        + dims: [int, int]\n        + class: \"sparse\" | \"dense\"\n        - matrix arithemtic ()\n        - matrix summary functions ()\n        - dbMatrixStats::*()\n    }\n\n    %% class dbSparseMatrix{\n\n    %% }\n\n    %% class dbDenseMatrix{\n\n    %% }\n}\n\nnamespace dbSequence_lib {\n\n    class dbSequence{\n    + dbData: dbData\n    + filetype: varchar\n    - 30+ functions for sequence analysis [Exon]\n    }\n\n}\n\n\n\nnamespace dbData_lib {\n    class dbData {\n        &lt;&lt;base class&gt;&gt;\n        + value: Input_Data\n        + name: table_name\n        + init: boolean\n        + conn: DuckDB connection\n        - DBI::*()\n        - dplyr::*()\n    }\n\n}\n\n\nnumerical &lt;..&gt; dbMatrix_lib : read/write\ngeometries &lt;..&gt; dbSpatial_lib : read/write\nsequences &lt;..&gt; dbSequence_lib : read/write\n\n%% dbSpatial --&gt; dbSpatialPoints\n%% dbSpatial --&gt; dbSpatialPolygons\n\n%% dbMatrix --&gt; dbDenseMatrix\n%% dbMatrix --&gt; dbSparseMatrix\n\ndbMatrix_lib --&gt; dbData_lib\ndbSpatial_lib --&gt; dbData_lib\ndbSequence_lib --&gt; dbData_lib\n\ndbData_lib &lt;..&gt; database : connect/disconnect/cache\n</code></pre>"},{"location":"overview/#description","title":"Description","text":"<p>TODO: More text on the structure of the dbverse ecosystem.</p>"},{"location":"packages/","title":"Core packages","text":"<p><code>dbverse</code> consists of the following core packages that contain simple classes, generics, and methods for representing scientific data in a DuckDB database.</p> <ol> <li>dbMatrix - A database package for      numerical data analysis with sparse/dense matrices.</li> <li>dbSpatial - A database package     for spatial geometry analysis.</li> <li>dbData - A lightweight package with     specifications for base class of <code>dbverse</code> core packages.</li> <li>dbSequence - A database package for genomic sequence analysis. In-progress.</li> </ol>"},{"location":"packages/#extensions","title":"Extensions","text":"<p>Packages that use <code>dbverse</code>.</p> <ul> <li>Giotto<ul> <li>A comprehensive spatial transcriptomic analysis toolbox.</li> </ul> </li> </ul>"},{"location":"reference/","title":"Reference","text":""}]}